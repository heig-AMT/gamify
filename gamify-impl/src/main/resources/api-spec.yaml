openapi: '3.0.3'
info:
  version: '0.1.0'
  title: Gamify API
  description: An API that manages application-specific events, and lets you define rules to find user scores.
security:
  #  - bearerAuth: []
  - apiKeyAuth: [ ]
paths:
  # Authentication related endpoints
  /register:
    post:
      description: register a new application
      operationId: addApp
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '201':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuthenticationSuccess'
        '403':
          description: forbidden
  /login:
    post:
      description: login a registered application
      operationId: login
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuthenticationSuccess'
        '403':
          description: forbidden

  # Events related endpoints
  /events:
    post:
      description: post a user defined event
      operationId: addEvent
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: created

  /categories:
    post:
      description: post a new category
      operationId: addCategory
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: created
    get:
      description: read a category
      operationId: getCategory
      parameters:
        - name: idCategory
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Category'
    put:
      description: update a category
      operationId: updateCategory
      parameters:
        - name: idCategory
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: created



components:
  securitySchemes:
    #    bearerAuth:            # arbitrary name for the security scheme
    #      type: http
    #      scheme: bearer       # warning: it HAS TO be a lowercase b for the swagger ui version used in springfox
    #      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    # An Event is specific to each user of our API.
    Event:
      type: object
      properties:
        userId:
          type: string
          nullable: false
        timestamp:
          type: string
          format: date-time
          nullable: false
        type:
          type: string
          nullable: false

    # A credentials is a piece of data used to identify an application.
    Credentials:
      type: object
      properties:
        appId:
          type: string
          nullable: false
        password:
          type: string
          nullable: false

    AuthenticationSuccess:
      type: object
      properties:
        token:
          type: string
          nullable: false

    # Category
    Category:
      type: object
      properties:
        name:
          type: string
          nullable: false

